{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { menuAPI } from \"../../services/api\";\nconst initialState = {\n  items: [],\n  categories: [],\n  loading: false,\n  error: null\n};\n\n// Async thunks\nexport const fetchMenuItems = createAsyncThunk(\"menu/fetchMenuItems\", async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const items = await menuAPI.getMenuItems();\n    return items;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Erro ao carregar menu\");\n  }\n});\nexport const fetchCategories = createAsyncThunk(\"menu/fetchCategories\", async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const categories = await menuAPI.getCategories();\n    return categories;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Erro ao carregar categorias\");\n  }\n});\nexport const createMenuItem = createAsyncThunk(\"menu/createMenuItem\", async (item, {\n  rejectWithValue\n}) => {\n  try {\n    const newItem = await menuAPI.createMenuItem(item);\n    return newItem;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    return rejectWithValue(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Erro ao criar item\");\n  }\n});\nexport const updateMenuItem = createAsyncThunk(\"menu/updateMenuItem\", async ({\n  id,\n  item\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const updatedItem = await menuAPI.updateMenuItem(id, item);\n    return updatedItem;\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    return rejectWithValue(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || \"Erro ao atualizar item\");\n  }\n});\nconst menuSlice = createSlice({\n  name: \"menu\",\n  initialState,\n  reducers: {\n    clearError: state => {\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Fetch menu items\n    .addCase(fetchMenuItems.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchMenuItems.fulfilled, (state, action) => {\n      state.loading = false;\n      state.items = action.payload;\n    }).addCase(fetchMenuItems.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Fetch categories\n    .addCase(fetchCategories.fulfilled, (state, action) => {\n      state.categories = action.payload;\n    })\n    // Create menu item\n    .addCase(createMenuItem.fulfilled, (state, action) => {\n      state.items.push(action.payload);\n    })\n    // Update menu item\n    .addCase(updateMenuItem.fulfilled, (state, action) => {\n      const index = state.items.findIndex(item => item.id === action.payload.id);\n      if (index !== -1) {\n        state.items[index] = action.payload;\n      }\n    });\n  }\n});\nexport const {\n  clearError\n} = menuSlice.actions;\nexport default menuSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","menuAPI","initialState","items","categories","loading","error","fetchMenuItems","_","rejectWithValue","getMenuItems","_error$response","_error$response$data","response","data","message","fetchCategories","getCategories","_error$response2","_error$response2$data","createMenuItem","item","newItem","_error$response3","_error$response3$data","updateMenuItem","id","updatedItem","_error$response4","_error$response4$data","menuSlice","name","reducers","clearError","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","push","index","findIndex","actions","reducer"],"sources":["/media/victor-rony/Trabalho/projectos/Restaurante/client/src/store/slices/menuSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\nimport { MenuItem, Category } from \"../../types\";\nimport { menuAPI } from \"../../services/api\";\n\ninterface MenuState {\n   items: MenuItem[];\n   categories: Category[];\n   loading: boolean;\n   error: string | null;\n}\n\nconst initialState: MenuState = {\n   items: [],\n   categories: [],\n   loading: false,\n   error: null,\n};\n\n// Async thunks\nexport const fetchMenuItems = createAsyncThunk(\"menu/fetchMenuItems\", async (_, { rejectWithValue }) => {\n   try {\n      const items = await menuAPI.getMenuItems();\n      return items;\n   } catch (error: any) {\n      return rejectWithValue(error.response?.data?.message || \"Erro ao carregar menu\");\n   }\n});\n\nexport const fetchCategories = createAsyncThunk(\"menu/fetchCategories\", async (_, { rejectWithValue }) => {\n   try {\n      const categories = await menuAPI.getCategories();\n      return categories;\n   } catch (error: any) {\n      return rejectWithValue(error.response?.data?.message || \"Erro ao carregar categorias\");\n   }\n});\n\nexport const createMenuItem = createAsyncThunk(\n   \"menu/createMenuItem\",\n   async (item: Omit<MenuItem, \"id\" | \"category\">, { rejectWithValue }) => {\n      try {\n         const newItem = await menuAPI.createMenuItem(item);\n         return newItem;\n      } catch (error: any) {\n         return rejectWithValue(error.response?.data?.message || \"Erro ao criar item\");\n      }\n   }\n);\n\nexport const updateMenuItem = createAsyncThunk(\n   \"menu/updateMenuItem\",\n   async ({ id, item }: { id: string; item: Partial<MenuItem> }, { rejectWithValue }) => {\n      try {\n         const updatedItem = await menuAPI.updateMenuItem(id, item);\n         return updatedItem;\n      } catch (error: any) {\n         return rejectWithValue(error.response?.data?.message || \"Erro ao atualizar item\");\n      }\n   }\n);\n\nconst menuSlice = createSlice({\n   name: \"menu\",\n   initialState,\n   reducers: {\n      clearError: (state) => {\n         state.error = null;\n      },\n   },\n   extraReducers: (builder) => {\n      builder\n         // Fetch menu items\n         .addCase(fetchMenuItems.pending, (state) => {\n            state.loading = true;\n            state.error = null;\n         })\n         .addCase(fetchMenuItems.fulfilled, (state, action: PayloadAction<MenuItem[]>) => {\n            state.loading = false;\n            state.items = action.payload;\n         })\n         .addCase(fetchMenuItems.rejected, (state, action) => {\n            state.loading = false;\n            state.error = action.payload as string;\n         })\n         // Fetch categories\n         .addCase(fetchCategories.fulfilled, (state, action: PayloadAction<Category[]>) => {\n            state.categories = action.payload;\n         })\n         // Create menu item\n         .addCase(createMenuItem.fulfilled, (state, action: PayloadAction<MenuItem>) => {\n            state.items.push(action.payload);\n         })\n         // Update menu item\n         .addCase(updateMenuItem.fulfilled, (state, action: PayloadAction<MenuItem>) => {\n            const index = state.items.findIndex((item) => item.id === action.payload.id);\n            if (index !== -1) {\n               state.items[index] = action.payload;\n            }\n         });\n   },\n});\n\nexport const { clearError } = menuSlice.actions;\nexport default menuSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}