{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  feedbacks: [],\n  statistics: null,\n  loading: false,\n  error: null\n};\nconst feedbackSlice = createSlice({\n  name: \"feedback\",\n  initialState,\n  reducers: {\n    setFeedbacks: (state, action) => {\n      state.feedbacks = action.payload.feedbacks;\n      state.statistics = action.payload.statistics;\n    },\n    addFeedback: (state, action) => {\n      state.feedbacks.unshift(action.payload);\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  setFeedbacks,\n  addFeedback,\n  setLoading,\n  setError\n} = feedbackSlice.actions;\nexport default feedbackSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","feedbacks","statistics","loading","error","feedbackSlice","name","reducers","setFeedbacks","state","action","payload","addFeedback","unshift","setLoading","setError","actions","reducer"],"sources":["/media/victor-rony/Trabalho/projectos/Restaurante/client/src/store/slices/feedbackSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { Feedback } from \"../../types\";\n\ninterface FeedbackState {\n   feedbacks: Feedback[];\n   statistics: any;\n   loading: boolean;\n   error: string | null;\n}\n\nconst initialState: FeedbackState = {\n   feedbacks: [],\n   statistics: null,\n   loading: false,\n   error: null,\n};\n\nconst feedbackSlice = createSlice({\n   name: \"feedback\",\n   initialState,\n   reducers: {\n      setFeedbacks: (state, action: PayloadAction<{ feedbacks: Feedback[]; statistics: any }>) => {\n         state.feedbacks = action.payload.feedbacks;\n         state.statistics = action.payload.statistics;\n      },\n      addFeedback: (state, action: PayloadAction<Feedback>) => {\n         state.feedbacks.unshift(action.payload);\n      },\n      setLoading: (state, action: PayloadAction<boolean>) => {\n         state.loading = action.payload;\n      },\n      setError: (state, action: PayloadAction<string | null>) => {\n         state.error = action.payload;\n      },\n   },\n});\n\nexport const { setFeedbacks, addFeedback, setLoading, setError } = feedbackSlice.actions;\nexport default feedbackSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAU7D,MAAMC,YAA2B,GAAG;EACjCC,SAAS,EAAE,EAAE;EACbC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACV,CAAC;AAED,MAAMC,aAAa,GAAGN,WAAW,CAAC;EAC/BO,IAAI,EAAE,UAAU;EAChBN,YAAY;EACZO,QAAQ,EAAE;IACPC,YAAY,EAAEA,CAACC,KAAK,EAAEC,MAAiE,KAAK;MACzFD,KAAK,CAACR,SAAS,GAAGS,MAAM,CAACC,OAAO,CAACV,SAAS;MAC1CQ,KAAK,CAACP,UAAU,GAAGQ,MAAM,CAACC,OAAO,CAACT,UAAU;IAC/C,CAAC;IACDU,WAAW,EAAEA,CAACH,KAAK,EAAEC,MAA+B,KAAK;MACtDD,KAAK,CAACR,SAAS,CAACY,OAAO,CAACH,MAAM,CAACC,OAAO,CAAC;IAC1C,CAAC;IACDG,UAAU,EAAEA,CAACL,KAAK,EAAEC,MAA8B,KAAK;MACpDD,KAAK,CAACN,OAAO,GAAGO,MAAM,CAACC,OAAO;IACjC,CAAC;IACDI,QAAQ,EAAEA,CAACN,KAAK,EAAEC,MAAoC,KAAK;MACxDD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;IAC/B;EACH;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,YAAY;EAAEI,WAAW;EAAEE,UAAU;EAAEC;AAAS,CAAC,GAAGV,aAAa,CAACW,OAAO;AACxF,eAAeX,aAAa,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}