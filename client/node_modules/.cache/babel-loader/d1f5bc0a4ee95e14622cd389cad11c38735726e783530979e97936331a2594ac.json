{"ast":null,"code":"var _jsxFileName = \"/media/victor-rony/Trabalho/projectos/Restaurante/client/src/pages/Orders/OrdersPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Box, Grid, Card, CardContent, Typography, Button, Chip, List, ListItem, ListItemText, ListItemSecondaryAction, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, FormControl, InputLabel, Select, MenuItem, Paper, Divider } from \"@mui/material\";\nimport { Add, Kitchen, CheckCircle, Restaurant, TableBar } from \"@mui/icons-material\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrdersPage = () => {\n  _s();\n  const [selectedOrder, setSelectedOrder] = useState(null);\n  const [statusFilter, setStatusFilter] = useState(\"ALL\");\n  const [newOrderDialog, setNewOrderDialog] = useState(false);\n  const {\n    user\n  } = useSelector(state => state.auth);\n\n  // Mock data para demonstração\n  const mockOrders = [{\n    id: \"1\",\n    orderNumber: \"PED001\",\n    status: \"PENDENTE\",\n    totalAmount: 45.9,\n    table: {\n      number: 5\n    },\n    user: {\n      name: \"Maria Silva\"\n    },\n    createdAt: new Date().toISOString(),\n    orderItems: [{\n      id: \"1\",\n      quantity: 2,\n      price: 15.9,\n      menuItem: {\n        name: \"Hambúrguer Clássico\",\n        category: {\n          name: \"Lanches\"\n        }\n      },\n      status: \"PENDENTE\"\n    }, {\n      id: \"2\",\n      quantity: 1,\n      price: 14.1,\n      menuItem: {\n        name: \"Batata Frita\",\n        category: {\n          name: \"Acompanhamentos\"\n        }\n      },\n      status: \"PENDENTE\"\n    }]\n  }, {\n    id: \"2\",\n    orderNumber: \"PED002\",\n    status: \"EM_PREPARACAO\",\n    totalAmount: 62.5,\n    table: {\n      number: 2\n    },\n    user: {\n      name: \"João Santos\"\n    },\n    createdAt: new Date(Date.now() - 600000).toISOString(),\n    orderItems: [{\n      id: \"3\",\n      quantity: 1,\n      price: 28.9,\n      menuItem: {\n        name: \"Pizza Margherita\",\n        category: {\n          name: \"Pizzas\"\n        }\n      },\n      status: \"EM_PREPARACAO\"\n    }, {\n      id: \"4\",\n      quantity: 2,\n      price: 16.8,\n      menuItem: {\n        name: \"Refrigerante\",\n        category: {\n          name: \"Bebidas\"\n        }\n      },\n      status: \"PRONTO\"\n    }]\n  }, {\n    id: \"3\",\n    orderNumber: \"PED003\",\n    status: \"PRONTO\",\n    totalAmount: 89.2,\n    table: {\n      number: 8\n    },\n    user: {\n      name: \"Ana Costa\"\n    },\n    createdAt: new Date(Date.now() - 1200000).toISOString(),\n    orderItems: [{\n      id: \"5\",\n      quantity: 2,\n      price: 35.9,\n      menuItem: {\n        name: \"Salmão Grelhado\",\n        category: {\n          name: \"Peixes\"\n        }\n      },\n      status: \"PRONTO\"\n    }, {\n      id: \"6\",\n      quantity: 1,\n      price: 17.4,\n      menuItem: {\n        name: \"Salada Caesar\",\n        category: {\n          name: \"Saladas\"\n        }\n      },\n      status: \"PRONTO\"\n    }]\n  }];\n  const getStatusColor = status => {\n    switch (status) {\n      case \"PENDENTE\":\n        return \"warning\";\n      case \"EM_PREPARACAO\":\n        return \"info\";\n      case \"PRONTO\":\n        return \"success\";\n      case \"SERVIDO\":\n        return \"default\";\n      case \"CANCELADO\":\n        return \"error\";\n      default:\n        return \"default\";\n    }\n  };\n  const getStatusText = status => {\n    switch (status) {\n      case \"PENDENTE\":\n        return \"Pendente\";\n      case \"EM_PREPARACAO\":\n        return \"Em Preparação\";\n      case \"PRONTO\":\n        return \"Pronto\";\n      case \"SERVIDO\":\n        return \"Servido\";\n      case \"CANCELADO\":\n        return \"Cancelado\";\n      default:\n        return status;\n    }\n  };\n  const getTimeElapsed = createdAt => {\n    const now = new Date();\n    const created = new Date(createdAt);\n    const diffInMinutes = Math.floor((now.getTime() - created.getTime()) / 60000);\n    if (diffInMinutes < 60) {\n      return `${diffInMinutes} min`;\n    } else {\n      const hours = Math.floor(diffInMinutes / 60);\n      const minutes = diffInMinutes % 60;\n      return `${hours}h ${minutes}m`;\n    }\n  };\n  const handleUpdateStatus = (orderId, newStatus) => {\n    // Aqui seria feita a chamada para a API\n    console.log(`Atualizando pedido ${orderId} para status ${newStatus}`);\n  };\n  const handleUpdateItemStatus = (orderId, itemId, newStatus) => {\n    // Aqui seria feita a chamada para a API\n    console.log(`Atualizando item ${itemId} do pedido ${orderId} para status ${newStatus}`);\n  };\n  const filteredOrders = statusFilter === \"ALL\" ? mockOrders : mockOrders.filter(order => order.status === statusFilter);\n  const canUpdateOrders = (user === null || user === void 0 ? void 0 : user.role) === \"COZINHEIRA\" || (user === null || user === void 0 ? void 0 : user.role) === \"ADMIN\";\n  const canCreateOrders = (user === null || user === void 0 ? void 0 : user.role) === \"RECEPCIONISTA\" || (user === null || user === void 0 ? void 0 : user.role) === \"ADMIN\";\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      mb: 3,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          fontWeight: \"bold\",\n          children: \"Pedidos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          color: \"text.secondary\",\n          children: (user === null || user === void 0 ? void 0 : user.role) === \"COZINHEIRA\" ? \"Gerencie o preparo dos pedidos\" : \"Acompanhe todos os pedidos do restaurante\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        gap: 2,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          size: \"small\",\n          sx: {\n            minWidth: 160\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Filtrar Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: statusFilter,\n            label: \"Filtrar Status\",\n            onChange: e => setStatusFilter(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"ALL\",\n              children: \"Todos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"PENDENTE\",\n              children: \"Pendente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"EM_PREPARACAO\",\n              children: \"Em Prepara\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"PRONTO\",\n              children: \"Pronto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"SERVIDO\",\n              children: \"Servido\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 16\n        }, this), canCreateOrders && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 58\n          }, this),\n          onClick: () => setNewOrderDialog(true),\n          children: \"Novo Pedido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: filteredOrders.map(order => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        lg: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            height: \"100%\",\n            border: order.status === \"PRONTO\" ? \"2px solid #10b981\" : \"1px solid #e5e7eb\"\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                fontWeight: \"bold\",\n                children: order.orderNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: getStatusText(order.status),\n                color: getStatusColor(order.status),\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 28\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              gap: 1,\n              mb: 1,\n              children: [/*#__PURE__*/_jsxDEV(TableBar, {\n                fontSize: \"small\",\n                color: \"action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"Mesa \", order.table.number]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"\\u2022 \", getTimeElapsed(order.createdAt)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 28\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              mb: 2,\n              children: [\"Atendente: \", order.user.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              sx: {\n                my: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              dense: true,\n              children: order.orderItems.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n                sx: {\n                  px: 0\n                },\n                children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: `${item.quantity}x ${item.menuItem.name}`,\n                  secondary: `R$ ${item.price.toFixed(2)}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 34\n                }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                  children: canUpdateOrders && order.status !== \"SERVIDO\" && /*#__PURE__*/_jsxDEV(Box, {\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    gap: 1,\n                    children: [/*#__PURE__*/_jsxDEV(Chip, {\n                      label: getStatusText(item.status),\n                      color: getStatusColor(item.status),\n                      size: \"small\",\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 43\n                    }, this), item.status === \"PENDENTE\" && /*#__PURE__*/_jsxDEV(IconButton, {\n                      size: \"small\",\n                      onClick: () => handleUpdateItemStatus(order.id, item.id, \"EM_PREPARACAO\"),\n                      color: \"primary\",\n                      children: /*#__PURE__*/_jsxDEV(Kitchen, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 276,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 269,\n                      columnNumber: 46\n                    }, this), item.status === \"EM_PREPARACAO\" && /*#__PURE__*/_jsxDEV(IconButton, {\n                      size: \"small\",\n                      onClick: () => handleUpdateItemStatus(order.id, item.id, \"PRONTO\"),\n                      color: \"success\",\n                      children: /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 285,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 280,\n                      columnNumber: 46\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 40\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 34\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 31\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              sx: {\n                my: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                fontWeight: \"bold\",\n                children: [\"Total: R$ \", order.totalAmount.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 28\n              }, this), canUpdateOrders && order.status !== \"SERVIDO\" && /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                gap: 1,\n                children: [order.status === \"PENDENTE\" && /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  variant: \"outlined\",\n                  startIcon: /*#__PURE__*/_jsxDEV(Kitchen, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 51\n                  }, this),\n                  onClick: () => handleUpdateStatus(order.id, \"EM_PREPARACAO\"),\n                  children: \"Iniciar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 37\n                }, this), order.status === \"EM_PREPARACAO\" && /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  variant: \"contained\",\n                  color: \"success\",\n                  startIcon: /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 51\n                  }, this),\n                  onClick: () => handleUpdateStatus(order.id, \"PRONTO\"),\n                  children: \"Finalizar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 37\n                }, this), order.status === \"PRONTO\" && (user === null || user === void 0 ? void 0 : user.role) !== \"COZINHEIRA\" && /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  variant: \"contained\",\n                  color: \"primary\",\n                  startIcon: /*#__PURE__*/_jsxDEV(Restaurant, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 51\n                  }, this),\n                  onClick: () => handleUpdateStatus(order.id, \"SERVIDO\"),\n                  children: \"Servir\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 19\n        }, this)\n      }, order.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 16\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 10\n    }, this), filteredOrders.length === 0 && /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 4,\n        textAlign: \"center\",\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"text.secondary\",\n        children: \"Nenhum pedido encontrado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        mt: 1,\n        children: statusFilter === \"ALL\" ? \"Não há pedidos no momento\" : `Não há pedidos com status \"${getStatusText(statusFilter)}\"`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: newOrderDialog,\n      onClose: () => setNewOrderDialog(false),\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Novo Pedido\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: \"Funcionalidade de cria\\xE7\\xE3o de pedidos ser\\xE1 implementada aqui.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setNewOrderDialog(false),\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => setNewOrderDialog(false),\n          children: \"Criar Pedido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 7\n  }, this);\n};\n_s(OrdersPage, \"lGCTomJTvGlgvfThBh5u+JnpsMk=\", false, function () {\n  return [useSelector];\n});\n_c = OrdersPage;\nexport default OrdersPage;\nvar _c;\n$RefreshReg$(_c, \"OrdersPage\");","map":{"version":3,"names":["React","useState","Box","Grid","Card","CardContent","Typography","Button","Chip","List","ListItem","ListItemText","ListItemSecondaryAction","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","FormControl","InputLabel","Select","MenuItem","Paper","Divider","Add","Kitchen","CheckCircle","Restaurant","TableBar","useSelector","jsxDEV","_jsxDEV","OrdersPage","_s","selectedOrder","setSelectedOrder","statusFilter","setStatusFilter","newOrderDialog","setNewOrderDialog","user","state","auth","mockOrders","id","orderNumber","status","totalAmount","table","number","name","createdAt","Date","toISOString","orderItems","quantity","price","menuItem","category","now","getStatusColor","getStatusText","getTimeElapsed","created","diffInMinutes","Math","floor","getTime","hours","minutes","handleUpdateStatus","orderId","newStatus","console","log","handleUpdateItemStatus","itemId","filteredOrders","filter","order","canUpdateOrders","role","canCreateOrders","children","display","justifyContent","alignItems","mb","variant","gutterBottom","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","color","gap","size","sx","minWidth","value","label","onChange","e","target","startIcon","onClick","container","spacing","map","item","xs","md","lg","height","border","fontSize","my","dense","px","primary","secondary","toFixed","length","p","textAlign","mt","open","onClose","maxWidth","fullWidth","_c","$RefreshReg$"],"sources":["/media/victor-rony/Trabalho/projectos/Restaurante/client/src/pages/Orders/OrdersPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n   Box,\n   Grid,\n   Card,\n   CardContent,\n   Typography,\n   Button,\n   Chip,\n   List,\n   ListItem,\n   ListItemText,\n   ListItemSecondaryAction,\n   IconButton,\n   Dialog,\n   DialogTitle,\n   DialogContent,\n   DialogActions,\n   FormControl,\n   InputLabel,\n   Select,\n   MenuItem,\n   Paper,\n   Divider,\n   Badge,\n} from \"@mui/material\";\nimport { Add, Edit, Kitchen, CheckCircle, Timer, Restaurant, TableBar } from \"@mui/icons-material\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\n\nconst OrdersPage: React.FC = () => {\n   const [selectedOrder, setSelectedOrder] = useState<any>(null);\n   const [statusFilter, setStatusFilter] = useState(\"ALL\");\n   const [newOrderDialog, setNewOrderDialog] = useState(false);\n\n   const { user } = useSelector((state: RootState) => state.auth);\n\n   // Mock data para demonstração\n   const mockOrders = [\n      {\n         id: \"1\",\n         orderNumber: \"PED001\",\n         status: \"PENDENTE\",\n         totalAmount: 45.9,\n         table: { number: 5 },\n         user: { name: \"Maria Silva\" },\n         createdAt: new Date().toISOString(),\n         orderItems: [\n            {\n               id: \"1\",\n               quantity: 2,\n               price: 15.9,\n               menuItem: { name: \"Hambúrguer Clássico\", category: { name: \"Lanches\" } },\n               status: \"PENDENTE\",\n            },\n            {\n               id: \"2\",\n               quantity: 1,\n               price: 14.1,\n               menuItem: { name: \"Batata Frita\", category: { name: \"Acompanhamentos\" } },\n               status: \"PENDENTE\",\n            },\n         ],\n      },\n      {\n         id: \"2\",\n         orderNumber: \"PED002\",\n         status: \"EM_PREPARACAO\",\n         totalAmount: 62.5,\n         table: { number: 2 },\n         user: { name: \"João Santos\" },\n         createdAt: new Date(Date.now() - 600000).toISOString(),\n         orderItems: [\n            {\n               id: \"3\",\n               quantity: 1,\n               price: 28.9,\n               menuItem: { name: \"Pizza Margherita\", category: { name: \"Pizzas\" } },\n               status: \"EM_PREPARACAO\",\n            },\n            {\n               id: \"4\",\n               quantity: 2,\n               price: 16.8,\n               menuItem: { name: \"Refrigerante\", category: { name: \"Bebidas\" } },\n               status: \"PRONTO\",\n            },\n         ],\n      },\n      {\n         id: \"3\",\n         orderNumber: \"PED003\",\n         status: \"PRONTO\",\n         totalAmount: 89.2,\n         table: { number: 8 },\n         user: { name: \"Ana Costa\" },\n         createdAt: new Date(Date.now() - 1200000).toISOString(),\n         orderItems: [\n            {\n               id: \"5\",\n               quantity: 2,\n               price: 35.9,\n               menuItem: { name: \"Salmão Grelhado\", category: { name: \"Peixes\" } },\n               status: \"PRONTO\",\n            },\n            {\n               id: \"6\",\n               quantity: 1,\n               price: 17.4,\n               menuItem: { name: \"Salada Caesar\", category: { name: \"Saladas\" } },\n               status: \"PRONTO\",\n            },\n         ],\n      },\n   ];\n\n   const getStatusColor = (status: string) => {\n      switch (status) {\n         case \"PENDENTE\":\n            return \"warning\";\n         case \"EM_PREPARACAO\":\n            return \"info\";\n         case \"PRONTO\":\n            return \"success\";\n         case \"SERVIDO\":\n            return \"default\";\n         case \"CANCELADO\":\n            return \"error\";\n         default:\n            return \"default\";\n      }\n   };\n\n   const getStatusText = (status: string) => {\n      switch (status) {\n         case \"PENDENTE\":\n            return \"Pendente\";\n         case \"EM_PREPARACAO\":\n            return \"Em Preparação\";\n         case \"PRONTO\":\n            return \"Pronto\";\n         case \"SERVIDO\":\n            return \"Servido\";\n         case \"CANCELADO\":\n            return \"Cancelado\";\n         default:\n            return status;\n      }\n   };\n\n   const getTimeElapsed = (createdAt: string) => {\n      const now = new Date();\n      const created = new Date(createdAt);\n      const diffInMinutes = Math.floor((now.getTime() - created.getTime()) / 60000);\n\n      if (diffInMinutes < 60) {\n         return `${diffInMinutes} min`;\n      } else {\n         const hours = Math.floor(diffInMinutes / 60);\n         const minutes = diffInMinutes % 60;\n         return `${hours}h ${minutes}m`;\n      }\n   };\n\n   const handleUpdateStatus = (orderId: string, newStatus: string) => {\n      // Aqui seria feita a chamada para a API\n      console.log(`Atualizando pedido ${orderId} para status ${newStatus}`);\n   };\n\n   const handleUpdateItemStatus = (orderId: string, itemId: string, newStatus: string) => {\n      // Aqui seria feita a chamada para a API\n      console.log(`Atualizando item ${itemId} do pedido ${orderId} para status ${newStatus}`);\n   };\n\n   const filteredOrders =\n      statusFilter === \"ALL\" ? mockOrders : mockOrders.filter((order) => order.status === statusFilter);\n\n   const canUpdateOrders = user?.role === \"COZINHEIRA\" || user?.role === \"ADMIN\";\n   const canCreateOrders = user?.role === \"RECEPCIONISTA\" || user?.role === \"ADMIN\";\n\n   return (\n      <Box>\n         <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n            <Box>\n               <Typography variant=\"h4\" gutterBottom fontWeight=\"bold\">\n                  Pedidos\n               </Typography>\n               <Typography variant=\"subtitle1\" color=\"text.secondary\">\n                  {user?.role === \"COZINHEIRA\"\n                     ? \"Gerencie o preparo dos pedidos\"\n                     : \"Acompanhe todos os pedidos do restaurante\"}\n               </Typography>\n            </Box>\n\n            <Box display=\"flex\" gap={2}>\n               <FormControl size=\"small\" sx={{ minWidth: 160 }}>\n                  <InputLabel>Filtrar Status</InputLabel>\n                  <Select value={statusFilter} label=\"Filtrar Status\" onChange={(e) => setStatusFilter(e.target.value)}>\n                     <MenuItem value=\"ALL\">Todos</MenuItem>\n                     <MenuItem value=\"PENDENTE\">Pendente</MenuItem>\n                     <MenuItem value=\"EM_PREPARACAO\">Em Preparação</MenuItem>\n                     <MenuItem value=\"PRONTO\">Pronto</MenuItem>\n                     <MenuItem value=\"SERVIDO\">Servido</MenuItem>\n                  </Select>\n               </FormControl>\n\n               {canCreateOrders && (\n                  <Button variant=\"contained\" startIcon={<Add />} onClick={() => setNewOrderDialog(true)}>\n                     Novo Pedido\n                  </Button>\n               )}\n            </Box>\n         </Box>\n\n         <Grid container spacing={3}>\n            {filteredOrders.map((order) => (\n               <Grid item xs={12} md={6} lg={4} key={order.id}>\n                  <Card\n                     sx={{\n                        height: \"100%\",\n                        border: order.status === \"PRONTO\" ? \"2px solid #10b981\" : \"1px solid #e5e7eb\",\n                     }}\n                  >\n                     <CardContent>\n                        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n                           <Typography variant=\"h6\" fontWeight=\"bold\">\n                              {order.orderNumber}\n                           </Typography>\n                           <Chip\n                              label={getStatusText(order.status)}\n                              color={getStatusColor(order.status) as any}\n                              size=\"small\"\n                           />\n                        </Box>\n\n                        <Box display=\"flex\" alignItems=\"center\" gap={1} mb={1}>\n                           <TableBar fontSize=\"small\" color=\"action\" />\n                           <Typography variant=\"body2\" color=\"text.secondary\">\n                              Mesa {order.table.number}\n                           </Typography>\n                           <Typography variant=\"body2\" color=\"text.secondary\">\n                              • {getTimeElapsed(order.createdAt)}\n                           </Typography>\n                        </Box>\n\n                        <Typography variant=\"body2\" color=\"text.secondary\" mb={2}>\n                           Atendente: {order.user.name}\n                        </Typography>\n\n                        <Divider sx={{ my: 2 }} />\n\n                        <List dense>\n                           {order.orderItems.map((item) => (\n                              <ListItem key={item.id} sx={{ px: 0 }}>\n                                 <ListItemText\n                                    primary={`${item.quantity}x ${item.menuItem.name}`}\n                                    secondary={`R$ ${item.price.toFixed(2)}`}\n                                 />\n                                 <ListItemSecondaryAction>\n                                    {canUpdateOrders && order.status !== \"SERVIDO\" && (\n                                       <Box display=\"flex\" alignItems=\"center\" gap={1}>\n                                          <Chip\n                                             label={getStatusText(item.status)}\n                                             color={getStatusColor(item.status) as any}\n                                             size=\"small\"\n                                             variant=\"outlined\"\n                                          />\n                                          {item.status === \"PENDENTE\" && (\n                                             <IconButton\n                                                size=\"small\"\n                                                onClick={() =>\n                                                   handleUpdateItemStatus(order.id, item.id, \"EM_PREPARACAO\")\n                                                }\n                                                color=\"primary\"\n                                             >\n                                                <Kitchen />\n                                             </IconButton>\n                                          )}\n                                          {item.status === \"EM_PREPARACAO\" && (\n                                             <IconButton\n                                                size=\"small\"\n                                                onClick={() => handleUpdateItemStatus(order.id, item.id, \"PRONTO\")}\n                                                color=\"success\"\n                                             >\n                                                <CheckCircle />\n                                             </IconButton>\n                                          )}\n                                       </Box>\n                                    )}\n                                 </ListItemSecondaryAction>\n                              </ListItem>\n                           ))}\n                        </List>\n\n                        <Divider sx={{ my: 2 }} />\n\n                        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n                           <Typography variant=\"h6\" fontWeight=\"bold\">\n                              Total: R$ {order.totalAmount.toFixed(2)}\n                           </Typography>\n\n                           {canUpdateOrders && order.status !== \"SERVIDO\" && (\n                              <Box display=\"flex\" gap={1}>\n                                 {order.status === \"PENDENTE\" && (\n                                    <Button\n                                       size=\"small\"\n                                       variant=\"outlined\"\n                                       startIcon={<Kitchen />}\n                                       onClick={() => handleUpdateStatus(order.id, \"EM_PREPARACAO\")}\n                                    >\n                                       Iniciar\n                                    </Button>\n                                 )}\n                                 {order.status === \"EM_PREPARACAO\" && (\n                                    <Button\n                                       size=\"small\"\n                                       variant=\"contained\"\n                                       color=\"success\"\n                                       startIcon={<CheckCircle />}\n                                       onClick={() => handleUpdateStatus(order.id, \"PRONTO\")}\n                                    >\n                                       Finalizar\n                                    </Button>\n                                 )}\n                                 {order.status === \"PRONTO\" && user?.role !== \"COZINHEIRA\" && (\n                                    <Button\n                                       size=\"small\"\n                                       variant=\"contained\"\n                                       color=\"primary\"\n                                       startIcon={<Restaurant />}\n                                       onClick={() => handleUpdateStatus(order.id, \"SERVIDO\")}\n                                    >\n                                       Servir\n                                    </Button>\n                                 )}\n                              </Box>\n                           )}\n                        </Box>\n                     </CardContent>\n                  </Card>\n               </Grid>\n            ))}\n         </Grid>\n\n         {filteredOrders.length === 0 && (\n            <Paper sx={{ p: 4, textAlign: \"center\", mt: 4 }}>\n               <Typography variant=\"h6\" color=\"text.secondary\">\n                  Nenhum pedido encontrado\n               </Typography>\n               <Typography variant=\"body2\" color=\"text.secondary\" mt={1}>\n                  {statusFilter === \"ALL\"\n                     ? \"Não há pedidos no momento\"\n                     : `Não há pedidos com status \"${getStatusText(statusFilter)}\"`}\n               </Typography>\n            </Paper>\n         )}\n\n         {/* Dialog para novo pedido - implementação básica */}\n         <Dialog open={newOrderDialog} onClose={() => setNewOrderDialog(false)} maxWidth=\"md\" fullWidth>\n            <DialogTitle>Novo Pedido</DialogTitle>\n            <DialogContent>\n               <Typography variant=\"body2\" color=\"text.secondary\">\n                  Funcionalidade de criação de pedidos será implementada aqui.\n               </Typography>\n            </DialogContent>\n            <DialogActions>\n               <Button onClick={() => setNewOrderDialog(false)}>Cancelar</Button>\n               <Button variant=\"contained\" onClick={() => setNewOrderDialog(false)}>\n                  Criar Pedido\n               </Button>\n            </DialogActions>\n         </Dialog>\n      </Box>\n   );\n};\n\nexport default OrdersPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}