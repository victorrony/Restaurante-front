{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  tables: [],\n  loading: false,\n  error: null\n};\nconst tablesSlice = createSlice({\n  name: \"tables\",\n  initialState,\n  reducers: {\n    setTables: (state, action) => {\n      state.tables = action.payload;\n    },\n    updateTable: (state, action) => {\n      const index = state.tables.findIndex(table => table.id === action.payload.id);\n      if (index !== -1) {\n        state.tables[index] = action.payload;\n      }\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  setTables,\n  updateTable,\n  setLoading,\n  setError\n} = tablesSlice.actions;\nexport default tablesSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","tables","loading","error","tablesSlice","name","reducers","setTables","state","action","payload","updateTable","index","findIndex","table","id","setLoading","setError","actions","reducer"],"sources":["/media/victor-rony/Trabalho/projectos/Restaurante/client/src/store/slices/tablesSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { Table } from \"../../types\";\n\ninterface TablesState {\n   tables: Table[];\n   loading: boolean;\n   error: string | null;\n}\n\nconst initialState: TablesState = {\n   tables: [],\n   loading: false,\n   error: null,\n};\n\nconst tablesSlice = createSlice({\n   name: \"tables\",\n   initialState,\n   reducers: {\n      setTables: (state, action: PayloadAction<Table[]>) => {\n         state.tables = action.payload;\n      },\n      updateTable: (state, action: PayloadAction<Table>) => {\n         const index = state.tables.findIndex((table) => table.id === action.payload.id);\n         if (index !== -1) {\n            state.tables[index] = action.payload;\n         }\n      },\n      setLoading: (state, action: PayloadAction<boolean>) => {\n         state.loading = action.payload;\n      },\n      setError: (state, action: PayloadAction<string | null>) => {\n         state.error = action.payload;\n      },\n   },\n});\n\nexport const { setTables, updateTable, setLoading, setError } = tablesSlice.actions;\nexport default tablesSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAS7D,MAAMC,YAAyB,GAAG;EAC/BC,MAAM,EAAE,EAAE;EACVC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACV,CAAC;AAED,MAAMC,WAAW,GAAGL,WAAW,CAAC;EAC7BM,IAAI,EAAE,QAAQ;EACdL,YAAY;EACZM,QAAQ,EAAE;IACPC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAA8B,KAAK;MACnDD,KAAK,CAACP,MAAM,GAAGQ,MAAM,CAACC,OAAO;IAChC,CAAC;IACDC,WAAW,EAAEA,CAACH,KAAK,EAAEC,MAA4B,KAAK;MACnD,MAAMG,KAAK,GAAGJ,KAAK,CAACP,MAAM,CAACY,SAAS,CAAEC,KAAK,IAAKA,KAAK,CAACC,EAAE,KAAKN,MAAM,CAACC,OAAO,CAACK,EAAE,CAAC;MAC/E,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;QACfJ,KAAK,CAACP,MAAM,CAACW,KAAK,CAAC,GAAGH,MAAM,CAACC,OAAO;MACvC;IACH,CAAC;IACDM,UAAU,EAAEA,CAACR,KAAK,EAAEC,MAA8B,KAAK;MACpDD,KAAK,CAACN,OAAO,GAAGO,MAAM,CAACC,OAAO;IACjC,CAAC;IACDO,QAAQ,EAAEA,CAACT,KAAK,EAAEC,MAAoC,KAAK;MACxDD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;IAC/B;EACH;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,SAAS;EAAEI,WAAW;EAAEK,UAAU;EAAEC;AAAS,CAAC,GAAGb,WAAW,CAACc,OAAO;AACnF,eAAed,WAAW,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}