{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  reservations: [],\n  loading: false,\n  error: null\n};\nconst reservationsSlice = createSlice({\n  name: \"reservations\",\n  initialState,\n  reducers: {\n    setReservations: (state, action) => {\n      state.reservations = action.payload;\n    },\n    addReservation: (state, action) => {\n      state.reservations.push(action.payload);\n    },\n    updateReservation: (state, action) => {\n      const index = state.reservations.findIndex(res => res.id === action.payload.id);\n      if (index !== -1) {\n        state.reservations[index] = action.payload;\n      }\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  setReservations,\n  addReservation,\n  updateReservation,\n  setLoading,\n  setError\n} = reservationsSlice.actions;\nexport default reservationsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","reservations","loading","error","reservationsSlice","name","reducers","setReservations","state","action","payload","addReservation","push","updateReservation","index","findIndex","res","id","setLoading","setError","actions","reducer"],"sources":["/media/victor-rony/Trabalho/projectos/Restaurante/client/src/store/slices/reservationsSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { Reservation } from \"../../types\";\n\ninterface ReservationsState {\n   reservations: Reservation[];\n   loading: boolean;\n   error: string | null;\n}\n\nconst initialState: ReservationsState = {\n   reservations: [],\n   loading: false,\n   error: null,\n};\n\nconst reservationsSlice = createSlice({\n   name: \"reservations\",\n   initialState,\n   reducers: {\n      setReservations: (state, action: PayloadAction<Reservation[]>) => {\n         state.reservations = action.payload;\n      },\n      addReservation: (state, action: PayloadAction<Reservation>) => {\n         state.reservations.push(action.payload);\n      },\n      updateReservation: (state, action: PayloadAction<Reservation>) => {\n         const index = state.reservations.findIndex((res) => res.id === action.payload.id);\n         if (index !== -1) {\n            state.reservations[index] = action.payload;\n         }\n      },\n      setLoading: (state, action: PayloadAction<boolean>) => {\n         state.loading = action.payload;\n      },\n      setError: (state, action: PayloadAction<string | null>) => {\n         state.error = action.payload;\n      },\n   },\n});\n\nexport const { setReservations, addReservation, updateReservation, setLoading, setError } = reservationsSlice.actions;\nexport default reservationsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAS7D,MAAMC,YAA+B,GAAG;EACrCC,YAAY,EAAE,EAAE;EAChBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACV,CAAC;AAED,MAAMC,iBAAiB,GAAGL,WAAW,CAAC;EACnCM,IAAI,EAAE,cAAc;EACpBL,YAAY;EACZM,QAAQ,EAAE;IACPC,eAAe,EAAEA,CAACC,KAAK,EAAEC,MAAoC,KAAK;MAC/DD,KAAK,CAACP,YAAY,GAAGQ,MAAM,CAACC,OAAO;IACtC,CAAC;IACDC,cAAc,EAAEA,CAACH,KAAK,EAAEC,MAAkC,KAAK;MAC5DD,KAAK,CAACP,YAAY,CAACW,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;IAC1C,CAAC;IACDG,iBAAiB,EAAEA,CAACL,KAAK,EAAEC,MAAkC,KAAK;MAC/D,MAAMK,KAAK,GAAGN,KAAK,CAACP,YAAY,CAACc,SAAS,CAAEC,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKR,MAAM,CAACC,OAAO,CAACO,EAAE,CAAC;MACjF,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;QACfN,KAAK,CAACP,YAAY,CAACa,KAAK,CAAC,GAAGL,MAAM,CAACC,OAAO;MAC7C;IACH,CAAC;IACDQ,UAAU,EAAEA,CAACV,KAAK,EAAEC,MAA8B,KAAK;MACpDD,KAAK,CAACN,OAAO,GAAGO,MAAM,CAACC,OAAO;IACjC,CAAC;IACDS,QAAQ,EAAEA,CAACX,KAAK,EAAEC,MAAoC,KAAK;MACxDD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;IAC/B;EACH;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,eAAe;EAAEI,cAAc;EAAEE,iBAAiB;EAAEK,UAAU;EAAEC;AAAS,CAAC,GAAGf,iBAAiB,CAACgB,OAAO;AACrH,eAAehB,iBAAiB,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}